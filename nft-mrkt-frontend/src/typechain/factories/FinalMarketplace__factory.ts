/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FinalMarketplace,
  FinalMarketplaceInterface,
} from "../FinalMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "MarketItemAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "MarketItemPurchase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftCollectionAddress",
        type: "address",
      },
    ],
    name: "addCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "addMarketItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "buyMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionIndex",
        type: "uint256",
      },
    ],
    name: "chooseCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionItems",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract NFTCollection",
        name: "",
        type: "address",
      },
    ],
    name: "collectionToItemId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAccount",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getItemsForSale",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract IERC721",
            name: "nftCollection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "bool",
            name: "forSale",
            type: "bool",
          },
        ],
        internalType: "struct FinalMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getItemsOwnedByUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract IERC721",
            name: "nftCollection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "bool",
            name: "forSale",
            type: "bool",
          },
        ],
        internalType: "struct FinalMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getTotalPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "nftCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nftCollectionsArray",
    outputs: [
      {
        internalType: "contract NFTCollection",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620024893803806200248983398181016040528101906200003791906200018a565b60016000819055506200005f62000053620000a560201b60201c565b620000ad60201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a0818152505050620001da565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200018481620001c0565b92915050565b6000602082840312156200019d57600080fd5b6000620001ad8482850162000173565b91505092915050565b6000819050919050565b620001cb81620001b6565b8114620001d757600080fd5b50565b60805160601c60a0516122786200021160003960008181610dee015261153e01526000818161090b0152610ba801526122786000f3fe6080604052600436106101095760003560e01c80637fd6f15c11610095578063a741bc6511610064578063a741bc6514610326578063b77f62c414610351578063bfb231d21461037a578063ca7dd375146103bc578063f2fde38b146103f957610109565b80637fd6f15c1461027c5780638da5cb5b146102a75780638e1de4b2146102d2578063a174e77a146102fd57610109565b806360f7401a116100dc57806360f7401a146101a957806365e17c9d146101e65780636bfb0d01146102115780636d4587de1461023c578063715018a61461026557610109565b8063064ddd041461010e57806309d3e1d814610139578063351901c3146101765780633ccfd60b14610192575b600080fd5b34801561011a57600080fd5b50610123610422565b6040516101309190611c5b565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b9190611920565b610704565b60405161016d9190611c7d565b60405180910390f35b610190600480360381019061018b9190611920565b610743565b005b34801561019e57600080fd5b506101a7610b10565b005b3480156101b557600080fd5b506101d060048036038101906101cb91906118f7565b610b8e565b6040516101dd9190611d78565b60405180910390f35b3480156101f257600080fd5b506101fb610ba6565b6040516102089190611c09565b60405180910390f35b34801561021d57600080fd5b50610226610bca565b6040516102339190611d78565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e9190611920565b610bd0565b005b34801561027157600080fd5b5061027a610d64565b005b34801561028857600080fd5b50610291610dec565b60405161029e9190611d78565b60405180910390f35b3480156102b357600080fd5b506102bc610e10565b6040516102c99190611bee565b60405180910390f35b3480156102de57600080fd5b506102e7610e3a565b6040516102f49190611c5b565b60405180910390f35b34801561030957600080fd5b50610324600480360381019061031f919061187f565b61116b565b005b34801561033257600080fd5b5061033b6111d7565b6040516103489190611d78565b60405180910390f35b34801561035d57600080fd5b50610378600480360381019061037391906118a8565b6111dd565b005b34801561038657600080fd5b506103a1600480360381019061039c9190611920565b6114af565b6040516103b396959493929190611d93565b60405180910390f35b3480156103c857600080fd5b506103e360048036038101906103de9190611920565b611538565b6040516103f09190611d78565b60405180910390f35b34801561040557600080fd5b50610420600480360381019061041b919061187f565b61159b565b005b606060005b6003548110156105c1576007600082815260200190815260200160002060040160149054906101000a900460ff16156105b4576004600760008381526020019081526020016000209080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004820160149054906101000a900460ff168160040160146101000a81548160ff02191690831515021790555050505b8080600101915050610427565b506004805480602002602001604051908101604052809291908181526020016000905b828210156106fb57838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff161515151581525050815260200190600101906105e4565b50505050905090565b6002818154811061071457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026000541415610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078090611d58565b60405180910390fd5b6002600081905550600061079c82611538565b905060006007600084815260200190815260200160002090506000831180156107c757506006548311155b610806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fd90611cf8565b60405180910390fd5b813414610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90611d38565b60405180910390fd5b8060040160149054906101000a900460ff161561089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190611cd8565b60405180910390fd5b8060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600301549081150290604051600060405180830381858888f19350505050158015610908573d6000803e3d6000fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc8260030154846109539190611f00565b9081150290604051600060405180830381858888f1935050505015801561097e573d6000803e3d6000fd5b5060008160040160146101000a81548160ff0219169083151502179055508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600201546040518463ffffffff1660e01b8152600401610a0193929190611c24565b600060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f30e831f2896cfdd24fb857606a44415b35b884c197eda621db44cdffef181e328685600201548660030154604051610afb93929190611df4565b60405180910390a45050600160008190555050565b610b18611693565b73ffffffffffffffffffffffffffffffffffffffff16610b36610e10565b73ffffffffffffffffffffffffffffffffffffffff1614610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8390611d18565b60405180910390fd5b565b60086020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b60006008600060028481548110610c10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060028181548110610cb2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637757abaa6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d2257600080fd5b505afa158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5a9190611949565b6003819055505050565b610d6c611693565b73ffffffffffffffffffffffffffffffffffffffff16610d8a610e10565b73ffffffffffffffffffffffffffffffffffffffff1614610de0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd790611d18565b60405180910390fd5b610dea600061169b565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060056000610e4a9190611761565b60005b600354811015611028573373ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561101b576005600760008381526020019081526020016000209080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004820160149054906101000a900460ff168160040160146101000a81548160ff02191690831515021790555050505b8080600101915050610e4d565b506005805480602002602001604051908101604052809291908181526020016000905b8282101561116257838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff1615151515815250508152602001906001019061104b565b50505050905090565b60008190506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60035481565b60026000541415611223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121a90611d58565b60405180910390fd5b60026000819055506000811161126e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126590611c98565b60405180910390fd5b6006600081548092919061128190611ffa565b91905055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016112c393929190611c24565b600060405180830381600087803b1580156112dd57600080fd5b505af11580156112f1573d6000803e3d6000fd5b505050506040518060c0016040528060065481526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506007600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fb54cfb19ffaa1fa935ff42ab669df81eab47ebe90fb3bcb92ace1d123dd176bb600654858560405161149a93929190611df4565b60405180910390a36001600081905550505050565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16905086565b600060647f00000000000000000000000000000000000000000000000000000000000000006115679190611e75565b60646115739190611f00565b60076000848152602001908152602001600020600301546115949190611ea6565b9050919050565b6115a3611693565b73ffffffffffffffffffffffffffffffffffffffff166115c1610e10565b73ffffffffffffffffffffffffffffffffffffffff1614611617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160e90611d18565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167e90611cb8565b60405180910390fd5b6116908161169b565b50565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50805460008255600502906000526020600020908101906117829190611785565b50565b5b80821115611812576000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549060ff021916905550600501611786565b5090565b600081359050611825816121e6565b92915050565b60008135905061183a816121fd565b92915050565b60008135905061184f81612214565b92915050565b6000813590506118648161222b565b92915050565b6000815190506118798161222b565b92915050565b60006020828403121561189157600080fd5b600061189f84828501611816565b91505092915050565b6000806000606084860312156118bd57600080fd5b60006118cb8682870161182b565b93505060206118dc86828701611855565b92505060406118ed86828701611855565b9150509250925092565b60006020828403121561190957600080fd5b600061191784828501611840565b91505092915050565b60006020828403121561193257600080fd5b600061194084828501611855565b91505092915050565b60006020828403121561195b57600080fd5b60006119698482850161186a565b91505092915050565b600061197e8383611b55565b60c08301905092915050565b61199381611f46565b82525050565b6119a281611f46565b82525050565b6119b181611f34565b82525050565b60006119c282611e3b565b6119cc8185611e53565b93506119d783611e2b565b8060005b83811015611a085781516119ef8882611972565b97506119fa83611e46565b9250506001810190506119db565b5085935050505092915050565b611a1e81611f58565b82525050565b611a2d81611f58565b82525050565b611a3c81611fb2565b82525050565b611a4b81611fb2565b82525050565b611a5a81611fd6565b82525050565b6000611a6d601f83611e64565b9150611a78826120a1565b602082019050919050565b6000611a90602683611e64565b9150611a9b826120ca565b604082019050919050565b6000611ab3601283611e64565b9150611abe82612119565b602082019050919050565b6000611ad6601283611e64565b9150611ae182612142565b602082019050919050565b6000611af9602083611e64565b9150611b048261216b565b602082019050919050565b6000611b1c601083611e64565b9150611b2782612194565b602082019050919050565b6000611b3f601f83611e64565b9150611b4a826121bd565b602082019050919050565b60c082016000820151611b6b6000850182611bd0565b506020820151611b7e6020850182611a33565b506040820151611b916040850182611bd0565b506060820151611ba46060850182611bd0565b506080820151611bb7608085018261198a565b5060a0820151611bca60a0850182611a15565b50505050565b611bd981611fa8565b82525050565b611be881611fa8565b82525050565b6000602082019050611c0360008301846119a8565b92915050565b6000602082019050611c1e6000830184611999565b92915050565b6000606082019050611c3960008301866119a8565b611c4660208301856119a8565b611c536040830184611bdf565b949350505050565b60006020820190508181036000830152611c7581846119b7565b905092915050565b6000602082019050611c926000830184611a51565b92915050565b60006020820190508181036000830152611cb181611a60565b9050919050565b60006020820190508181036000830152611cd181611a83565b9050919050565b60006020820190508181036000830152611cf181611aa6565b9050919050565b60006020820190508181036000830152611d1181611ac9565b9050919050565b60006020820190508181036000830152611d3181611aec565b9050919050565b60006020820190508181036000830152611d5181611b0f565b9050919050565b60006020820190508181036000830152611d7181611b32565b9050919050565b6000602082019050611d8d6000830184611bdf565b92915050565b600060c082019050611da86000830189611bdf565b611db56020830188611a42565b611dc26040830187611bdf565b611dcf6060830186611bdf565b611ddc6080830185611999565b611de960a0830184611a24565b979650505050505050565b6000606082019050611e096000830186611bdf565b611e166020830185611bdf565b611e236040830184611bdf565b949350505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611e8082611fa8565b9150611e8b83611fa8565b925082611e9b57611e9a612072565b5b828204905092915050565b6000611eb182611fa8565b9150611ebc83611fa8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ef557611ef4612043565b5b828202905092915050565b6000611f0b82611fa8565b9150611f1683611fa8565b925082821015611f2957611f28612043565b5b828203905092915050565b6000611f3f82611f88565b9050919050565b6000611f5182611f88565b9050919050565b60008115159050919050565b6000611f6f82611f34565b9050919050565b6000611f8182611f34565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611fbd82611fc4565b9050919050565b6000611fcf82611f88565b9050919050565b6000611fe182611fe8565b9050919050565b6000611ff382611f88565b9050919050565b600061200582611fa8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561203857612037612043565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f5072696365206d7573742062652067726561746572207468616e207a65726f00600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6974656d206e6f7420666f722073616c65210000000000000000000000000000600082015250565b7f6974656d20646f65736e27742065786973740000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6e6f7420656e6f756768206d6f6e657900000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6121ef81611f34565b81146121fa57600080fd5b50565b61220681611f64565b811461221157600080fd5b50565b61221d81611f76565b811461222857600080fd5b50565b61223481611fa8565b811461223f57600080fd5b5056fea2646970667358221220375e1725142f6d6d92108071cad096d31cfc409973c26546d16cd5f1992ef28064736f6c63430008040033";

export class FinalMarketplace__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _feePercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FinalMarketplace> {
    return super.deploy(
      _feePercent,
      overrides || {}
    ) as Promise<FinalMarketplace>;
  }
  getDeployTransaction(
    _feePercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_feePercent, overrides || {});
  }
  attach(address: string): FinalMarketplace {
    return super.attach(address) as FinalMarketplace;
  }
  connect(signer: Signer): FinalMarketplace__factory {
    return super.connect(signer) as FinalMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FinalMarketplaceInterface {
    return new utils.Interface(_abi) as FinalMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FinalMarketplace {
    return new Contract(address, _abi, signerOrProvider) as FinalMarketplace;
  }
}
