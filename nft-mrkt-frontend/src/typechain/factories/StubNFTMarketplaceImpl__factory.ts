/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StubNFTMarketplaceImpl,
  StubNFTMarketplaceImplInterface,
} from "../StubNFTMarketplaceImpl";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
    ],
    name: "buyItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "productName",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "makerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Models.NftCollection",
        name: "_newNftCollection",
        type: "tuple",
      },
    ],
    name: "createNftCollectionContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllCollectionsForSale",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "productName",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "makerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Models.NftCollection[]",
        name: "collections",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061137e806100206000396000f3fe6080604052600436106100345760003560e01c80630328217f146100395780630b3ebd7a14610062578063dd62b0391461008d575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610cb6565b6100bd565b005b34801561006e57600080fd5b506100776102a6565b6040516100849190610f23565b60405180910390f35b6100a760048036038101906100a29190610c8d565b61074d565b6040516100b49190610fc1565b60405180910390f35b6100df6040518060600160405280602d81526020016112e5602d913933610863565b806000808360a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061013e9291906109ca565b50602082015181600101908051906020019061015b9291906109ca565b5060408201518160020190805190602001906101789291906109ca565b5060608201518160030190805190602001906101959291906109ca565b5060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c082015181600601559050508060a0015160016000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002600082825461029c9190611098565b9250508190555050565b60606102e76040518060400160405280601981526020017f6275794974656d3a206d73672073656e6465722069732025730000000000000081525033610863565b600060025467ffffffffffffffff81111561032b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561036457816020015b610351610a50565b8152602001906001900390816103495790505b50905060005b600254811015610745576000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820180546104009061116c565b80601f016020809104026020016040519081016040528092919081815260200182805461042c9061116c565b80156104795780601f1061044e57610100808354040283529160200191610479565b820191906000526020600020905b81548152906001019060200180831161045c57829003601f168201915b505050505081526020016001820180546104929061116c565b80601f01602080910402602001604051908101604052809291908181526020018280546104be9061116c565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b505050505081526020016002820180546105249061116c565b80601f01602080910402602001604051908101604052809291908181526020018280546105509061116c565b801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b505050505081526020016003820180546105b69061116c565b80601f01602080910402602001604051908101604052809291908181526020018280546105e29061116c565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b505050505081526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481525050828281518110610727577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250808061073d906111cf565b91505061036a565b508091505090565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006015490506107b8604051806060016040528060378152602001611312603791393334846108ff565b8034116107c457600080fd5b600083905060008173ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b81526004016108049190610f08565b602060405180830381600087803b15801561081e57600080fd5b505af1158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190610cf7565b9050809350505050919050565b6108fb8282604051602401610879929190610f45565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109a1565b5050565b61099b848484846040516024016109199493929190610f75565b6040516020818303038152906040527fdaa394bd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109a1565b50505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546109d69061116c565b90600052602060002090601f0160209004810192826109f85760008555610a3f565b82601f10610a1157805160ff1916838001178555610a3f565b82800160010185558215610a3f579182015b82811115610a3e578251825591602001919060010190610a23565b5b509050610a4c9190610ab9565b5090565b6040518060e0016040528060608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b80821115610ad2576000816000905550600101610aba565b5090565b6000610ae9610ae484611001565b610fdc565b905082815260208101848484011115610b0157600080fd5b610b0c84828561112a565b509392505050565b600081359050610b23816112b6565b92915050565b600082601f830112610b3a57600080fd5b8135610b4a848260208601610ad6565b91505092915050565b600060e08284031215610b6557600080fd5b610b6f60e0610fdc565b9050600082013567ffffffffffffffff811115610b8b57600080fd5b610b9784828501610b29565b600083015250602082013567ffffffffffffffff811115610bb757600080fd5b610bc384828501610b29565b602083015250604082013567ffffffffffffffff811115610be357600080fd5b610bef84828501610b29565b604083015250606082013567ffffffffffffffff811115610c0f57600080fd5b610c1b84828501610b29565b6060830152506080610c2f84828501610b14565b60808301525060a0610c4384828501610b14565b60a08301525060c0610c5784828501610c63565b60c08301525092915050565b600081359050610c72816112cd565b92915050565b600081519050610c87816112cd565b92915050565b600060208284031215610c9f57600080fd5b6000610cad84828501610b14565b91505092915050565b600060208284031215610cc857600080fd5b600082013567ffffffffffffffff811115610ce257600080fd5b610cee84828501610b53565b91505092915050565b600060208284031215610d0957600080fd5b6000610d1784828501610c78565b91505092915050565b6000610d2c8383610e39565b905092915050565b610d3d816110ee565b82525050565b610d4c816110ee565b82525050565b6000610d5d82611042565b610d678185611065565b935083602082028501610d7985611032565b8060005b85811015610db55784840389528151610d968582610d20565b9450610da183611058565b925060208a01995050600181019050610d7d565b50829750879550505050505092915050565b6000610dd28261104d565b610ddc8185611076565b9350610dec818560208601611139565b610df5816112a5565b840191505092915050565b6000610e0b8261104d565b610e158185611087565b9350610e25818560208601611139565b610e2e816112a5565b840191505092915050565b600060e0830160008301518482036000860152610e568282610dc7565b91505060208301518482036020860152610e708282610dc7565b91505060408301518482036040860152610e8a8282610dc7565b91505060608301518482036060860152610ea48282610dc7565b9150506080830151610eb96080860182610d34565b5060a0830151610ecc60a0860182610d34565b5060c0830151610edf60c0860182610eea565b508091505092915050565b610ef381611120565b82525050565b610f0281611120565b82525050565b6000602082019050610f1d6000830184610d43565b92915050565b60006020820190508181036000830152610f3d8184610d52565b905092915050565b60006040820190508181036000830152610f5f8185610e00565b9050610f6e6020830184610d43565b9392505050565b60006080820190508181036000830152610f8f8187610e00565b9050610f9e6020830186610d43565b610fab6040830185610ef9565b610fb86060830184610ef9565b95945050505050565b6000602082019050610fd66000830184610ef9565b92915050565b6000610fe6610ff7565b9050610ff2828261119e565b919050565b6000604051905090565b600067ffffffffffffffff82111561101c5761101b611276565b5b611025826112a5565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110a382611120565b91506110ae83611120565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110e3576110e2611218565b5b828201905092915050565b60006110f982611100565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561115757808201518184015260208101905061113c565b83811115611166576000848401525b50505050565b6000600282049050600182168061118457607f821691505b6020821081141561119857611197611247565b5b50919050565b6111a7826112a5565b810181811067ffffffffffffffff821117156111c6576111c5611276565b5b80604052505050565b60006111da82611120565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561120d5761120c611218565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6112bf816110ee565b81146112ca57600080fd5b50565b6112d681611120565b81146112e157600080fd5b5056fe6372656174654e6674436f6c6c656374696f6e436f6e74726163743a206d73672073656e6465722069732025736275794974656d3a206d73672073656e6465722069732025732c206d73672e76616c75652069732025732c207072696365206973202573a2646970667358221220ecdfc5e66081b0430e03ef849398ae018094186008815c7bb93ff1ddbb4ec53064736f6c63430008040033";

export class StubNFTMarketplaceImpl__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StubNFTMarketplaceImpl> {
    return super.deploy(overrides || {}) as Promise<StubNFTMarketplaceImpl>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StubNFTMarketplaceImpl {
    return super.attach(address) as StubNFTMarketplaceImpl;
  }
  connect(signer: Signer): StubNFTMarketplaceImpl__factory {
    return super.connect(signer) as StubNFTMarketplaceImpl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StubNFTMarketplaceImplInterface {
    return new utils.Interface(_abi) as StubNFTMarketplaceImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StubNFTMarketplaceImpl {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StubNFTMarketplaceImpl;
  }
}
